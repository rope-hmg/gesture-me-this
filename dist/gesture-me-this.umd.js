(function(o,r){typeof exports=="object"&&typeof module<"u"?r(exports):typeof define=="function"&&define.amd?define(["exports"],r):(o=typeof globalThis<"u"?globalThis:o||self,r(o["gesture-me-this"]={}))})(this,function(o){"use strict";class r{constructor(t,e){this.x=t,this.y=e}add(t,e=new r(0,0)){return e.x=this.x+t.x,e.y=this.y+t.y,e}add_assign(t){return this.add(t,this)}sub(t,e=new r(0,0)){return e.x=this.x-t.x,e.y=this.y-t.y,e}sub_assign(t){return this.sub(t,this)}mul(t,e=new r(0,0)){return e.x=this.x*t,e.y=this.y*t,e}mul_assign(t){return this.mul(t,this)}div(t,e=new r(0,0)){return this.mul(1/t,e)}div_assign(t){return this.mul_assign(1/t)}neg(t=new r(0,0)){return this.mul(-1,t)}neg_assign(){return this.mul_assign(-1)}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}length_sq(){return this.dot(this)}length(){return Math.sqrt(this.length_sq())}normalise(t=new r(0,0)){return this.mul(1/this.length(),t)}normalise_assign(){return this.mul_assign(1/this.length())}copy_from(t){return this.x=t.x,this.y=t.y,this}set(t,e){this.x=t,this.y=e}}class _{constructor(){this.finger_count=0,this.fingers=new Map,this.centroid=new r(0,0)}}class d{constructor(t,e){this.position_delta=new r(0,0),this.centroid_direction=new r(0,0),this.position=new r(t,e)}is_moving_toward_centroid(){return this.position_delta.dot(this.centroid_direction)>0}angle_delta_around_point(t){const e=this.position.sub(this.position_delta).sub_assign(t).normalise_assign(),n=this.position.sub(t).normalise_assign();return Math.acos(e.dot(n))}}var g=(i=>(i[i.OnStart=0]="OnStart",i[i.OnMove=1]="OnMove",i[i.OnEnd=2]="OnEnd",i[i.OnCancel=3]="OnCancel",i))(g||{});class p{constructor(t,e){this.element=t,this.listeners=e,this.metrics=new _;const n=s=>{s.preventDefault(),this.initialise_touches(s.changedTouches),this.run_user_handlers(s,0)},c=s=>{s.preventDefault(),this.update_touches(s.changedTouches),this.run_user_handlers(s,1)},h=s=>{s.preventDefault(),this.remove_touches(s.changedTouches),this.run_user_handlers(s,2)},u=s=>{s.preventDefault(),this.remove_all_touches(),this.run_user_handlers(s,3)};t.addEventListener("touchstart",n),t.addEventListener("touchmove",c),t.addEventListener("touchend",h),t.addEventListener("touchcancel",u),this.on_start=n,this.on_move=c,this.on_end=h,this.on_cancel=u}disableGestures(){this.element.removeEventListener("touchstart",this.on_start),this.element.removeEventListener("touchmove",this.on_move),this.element.removeEventListener("touchmove",this.on_end),this.element.removeEventListener("touchmove",this.on_cancel)}run_user_handlers(t,e){const n=this.listeners.get(e);if(n)for(const c of n)c(this.metrics,t)}initialise_touches(t){this.metrics.finger_count+=t.length;for(const e of t){const n=new d(e.clientX,e.clientY);this.metrics.fingers.set(e.identifier,n)}this.calculate_centroid()}update_touches(t){for(const e of t){const n=this.metrics.fingers.get(e.identifier);n&&(n.position_delta.set(e.clientX-n.position.x,e.clientY-n.position.y),n.position.set(e.clientX,e.clientY))}this.calculate_centroid()}remove_touches(t){this.metrics.finger_count-=t.length;for(const e of t)this.metrics.fingers.delete(e.identifier);this.calculate_centroid()}remove_all_touches(){this.metrics.finger_count=0,this.metrics.fingers.clear(),this.metrics.centroid.set(0,0)}calculate_centroid(){const{finger_count:t,fingers:e,centroid:n}=this.metrics;n.set(0,0);for(const c of e.values())n.add_assign(c.position);t>1&&n.div_assign(t);for(const c of e.values())n.sub(c.position,c.centroid_direction)}}var f=(i=>(i[i.Inward=0]="Inward",i[i.Outward=1]="Outward",i))(f||{});const w={sensitivity:.5},y=(i,t)=>{const{exact_finger_count:e,sensitivity:n=.5}=t??w,c=!!e&&i.finger_count===e||!e&&i.finger_count>1;let h;if(c){const u=i.fingers.values();let{value:s,done:m}=u.next(),v=s.is_moving_toward_centroid(),l=!0;for(;!m&&l;)l=v===s.is_moving_toward_centroid(),{value:s,done:m}=u.next();if(l){const x=v?0:1;let a=0;for(const O of i.fingers.values())a+=O.position_delta.length();a/=i.finger_count,a*=n,h={strength:a,direction:x}}}return h?{is_recognised:!0,metrics:h}:{is_recognised:!1}};o.EventType=g,o.Finger=d,o.GestureController=p,o.Metrics=_,o.PinchDirection=f,o.Vector=r,o.pinch_zoom=y,Object.defineProperty(o,Symbol.toStringTag,{value:"Module"})});
//# sourceMappingURL=gesture-me-this.umd.js.map
